<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>News Blog API Documentation</title>
    <style>
      body {
        font-family: sans-serif;
      }
      h1 {
        text-align: center;
      }
      .api-endpoint {
        margin-bottom: 20px;
      }
      .api-endpoint h3 {
        margin-top: 0;
      }
      .api-endpoint pre {
        background-color: #f5f5f5;
        padding: 10px;
        border-radius: 5px;
      }
    </style>
  </head>
  <body>
    <h1>News Blog API Documentation</h1>
    <p>
      This API is built using Node.js and Express. Here's a list of available
      endpoints:
    </p>

    <div class="api-endpoint">
      <h3>GET /list/:number</h3>
      <p>This endpoint retrieves a specific number of latest news articles.</p>
      <pre>
      Request:
      GET http://localhost:PORT/list/10  (Replace PORT with your server port)

      Response:
      {
        "articles": [
          {
            "title": "Article Title 1",
            "description": "Article Description 1",
            "category": "Category 1",
            "publishedAt": "2024-06-23T00:00:00.000Z",
            "url": "[invalid URL removed]"
          },
          // ... additional articles
        ]
      }
    </pre
      >
    </div>

    <div class="api-endpoint">
      <h3>GET /article/:articleId</h3>
      <p>This endpoint retrieves a single article with the provided ID.</p>
      <pre>
      Request:
      GET http://localhost:PORT/article/123  (Replace PORT with your server port and 123 with the actual article ID)

      Response:
      {
        "title": "Article Title",
        "description": "Article Description",
        "category": "Category",
        "publishedAt": "2024-06-23T00:00:00.000Z",
        "url": "[invalid URL removed]"
      }
    </pre
      >
    </div>

    <div class="api-endpoint">
      <h3>GET /category/:categoryName</h3>
      <p>
        This endpoint retrieves all articles belonging to a specific category.
      </p>
      <pre>
      Request:
      GET http://localhost:PORT/category/business  (Replace PORT with your server port and "business" with the actual category name)

      Response:
      {
        "articles": [
          {
            "title": "Article Title 1",
            "description": "Article Description 1",
            "category": "business",
            "publishedAt": "2024-06-23T00:00:00.000Z",
            "url": "[invalid URL removed]"
          },
          // ... additional articles with the same category
        ]
      }
    </pre
      >
    </div>
  </body>
</html>
